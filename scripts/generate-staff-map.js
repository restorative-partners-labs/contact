#!/usr/bin/env node

const fs = require('fs');
const path = require('path');
const crypto = require('crypto');

// Copy the ID functions here for standalone use
function normalizeName(name) {
  return name
    .trim()
    .replace(/\s+/g, ' ')
    .toLowerCase()
    .replace(/[^a-z0-9-]/g, ''); // Allow hyphens like PHP version
}

function makeHashedId(firstName) {
  const normalized = normalizeName(firstName);
  const secret = process.env.HASH_SECRET || 'default-secret';
  
  const hmac = crypto.createHmac('sha256', secret);
  hmac.update(normalized);
  
  // Return first 16 bytes as hex for a shorter, URL-safe ID
  return hmac.digest('hex').substring(0, 16);
}

function generateStaffMap(staffMembers) {
  const staffMap = {};
  
  for (const member of staffMembers) {
    const id = makeHashedId(member.firstName);
    staffMap[id] = { email: member.email };
  }
  
  return staffMap;
}

function generateTypeScriptFile(staffMap) {
  const entries = Object.entries(staffMap)
    .map(([id, data]) => `  "${id}": { email: "${data.email}" }`)
    .join(',\n');
  
  return `/**
 * Staff directory mapping hashed IDs to recipient emails
 * This file is generated by the offline script and should not contain real names
 */

export const STAFF_BY_ID: Record<string, { email: string }> = {
${entries}
};
`;
}

function main() {
  const args = process.argv.slice(2);
  
  if (args.length !== 1) {
    console.error('Usage: node scripts/generate-staff-map.js <input-file>');
    console.error('Input file should be JSON with format:');
    console.error('[');
    console.error('  { "firstName": "Gus", "email": "gus@restorativepartners.org" }');
    console.error(']');
    process.exit(1);
  }
  
  const inputFile = args[0];
  
  try {
    // Read input file
    const inputContent = fs.readFileSync(inputFile, 'utf-8');
    const staffMembers = JSON.parse(inputContent);
    
    // Generate staff map
    const staffMap = generateStaffMap(staffMembers);
    
    // Generate TypeScript file content
    const tsContent = generateTypeScriptFile(staffMap);
    
    // Write to data/staff.ts
    const outputPath = path.join(__dirname, '../src/data/staff.ts');
    fs.writeFileSync(outputPath, tsContent);
    
    console.log(`Generated staff map with ${Object.keys(staffMap).length} entries`);
    console.log(`Output written to: ${outputPath}`);
    
    // Also output JSON for reference
    const jsonPath = path.join(__dirname, '../src/data/staff.json');
    fs.writeFileSync(jsonPath, JSON.stringify(staffMap, null, 2));
    console.log(`JSON output written to: ${jsonPath}`);
    
  } catch (error) {
    console.error('Error:', error);
    process.exit(1);
  }
}

if (require.main === module) {
  main();
}

